{"version":3,"sources":["menuItems.js","categories.js","App.js","reportWebVitals.js","index.js"],"names":["menu","menuItem","isVegetarian","menuIngredients","item","quantity","categories","category","items","App","useState","Array","length","fill","checkedState","setCheckedState","Object","ingredients","setIngredients","countSelected","setCountSelected","className","map","index","type","id","name","value","checked","onChange","position","updatedCheckedState","newIngredients","forEach","preVal","console","log","newVal","handleOnChange","htmlFor","entries","filter","key","indexOf","index2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLACIA,EAAO,CACH,CACIC,SAAU,cACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,kBACNC,SAAU,KAEd,CACID,KAAM,QACNC,SAAU,KAItB,CACIJ,SAAU,qBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,eACNC,SAAU,GAEd,CACID,KAAM,mBACNC,SAAU,GAEd,CACID,KAAM,gBACNC,SAAU,GAEd,CACID,KAAM,YACNC,SAAU,GAEd,CACID,KAAM,aACNC,SAAU,GAEd,CACID,KAAM,kBACNC,SAAU,KAItB,CACIJ,SAAU,uBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,sBACNC,SAAU,GAEd,CACID,KAAM,QACNC,SAAU,GAEd,CACID,KAAM,YACNC,SAAU,KAKtB,CACIJ,SAAU,yBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,iBACNC,SAAU,GAEd,CACID,KAAM,QACNC,SAAU,GAEd,CACID,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,aACNC,SAAU,GAEd,CACID,KAAM,YACNC,SAAU,GAEd,CACID,KAAM,gBACNC,SAAU,KAItB,CACIJ,SAAU,gBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,iBACNC,SAAU,GAEd,CACID,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,eACNC,SAAU,GAEd,CACID,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,SACNC,SAAU,GAEd,CACID,KAAM,gBACNC,SAAU,KAItB,CACIJ,SAAU,mBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,UACNC,SAAU,GAEd,CACID,KAAM,gBACNC,SAAU,GAEd,CACID,KAAM,aACNC,SAAU,KAItB,CACIJ,SAAU,iBACVC,cAAc,EACdC,gBAAiB,CACb,CACIC,KAAM,aACNC,SAAU,GAEd,CACID,KAAM,eACNC,SAAU,GAEd,CACID,KAAM,QACNC,SAAU,GAEd,CACID,KAAM,YACNC,SAAU,KAItB,CACIJ,SAAU,eACVC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","file":"static/js/main.a07d473e.chunk.js","sourcesContent":["export const\r\n    menu = [\r\n        {\r\n            menuItem: \"Salmon Rice\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"salmon\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"frozen brocolli\",\r\n                    quantity: \"1\"\r\n                },\r\n                {\r\n                    item: \"onion\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Vegitarian Risotto\",\r\n            isVegetarian: true,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"risotto rice\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"vine plum tomato\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"cherry tomato\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"courgette\",\r\n                    quantity: 1 \r\n                },\r\n                {\r\n                    item: \"white wine\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"parmesan cheese\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Vegi Chili Con-carne\",\r\n            isVegetarian: true,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"tinned kidney beans\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"onion\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"courgette\",\r\n                    quantity: 1\r\n                },\r\n                \r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Japanese Chicken Curry\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"chicken breast\", \r\n                    quantity: 2\r\n                },\r\n                {\r\n                    item: \"onion\",\r\n                    quantity: 4\r\n                },\r\n                {\r\n                    item: \"carrot\",\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    item: \"potato\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"red pepper\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"courgette\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"tinned tomato\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Chicken Korma\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"chicken breast\",\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    item: \"ginger\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"single cream\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"oninon\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"lentil\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"mango chutney\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Haddock Couscous\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"haddock\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"spring oninon\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"red pepper\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Prawn Linguine\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"king prawn\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"basil leaves\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"lemon\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"courgette\",\r\n                    quantity: 1\r\n                }          \r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Haddock Mash\",\r\n            isVegetarian: false,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"haddock\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"red oninon\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"tomato\",\r\n                    quantity: 3\r\n                },\r\n                {\r\n                    item: \"potato\",\r\n                    quantity: 2\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            menuItem: \"Veg Tagine\",\r\n            isVegetarian: true,\r\n            menuIngredients: [\r\n                {\r\n                    item: \"orange\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"courgette\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"carrot\",\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    item: \"leek\",\r\n                    quantity: 1\r\n                },\r\n                {\r\n                    item: \"tinned tomato\",\r\n                    quantity: 1\r\n                }\r\n            ]\r\n        }\r\n    ];","export const\r\n    categories = [\r\n        {category:\"fruit & veg\", items:[\"carrot\",\"onion\", \"spring onion\", \"ginger\", \"garlic\",\"lemon\",\"basil leaves\",\"potato\",\"red pepper\",\"vine plum tomato\",\"yellow pepper\",\"tomato\",\"vined plum tomato\",\"cherry tomato\",\"mango\",\"avocado\",\"courgette\"]},\r\n        {category:\"meat & fish\", items:[\"haddock\",\"salmon\",\"chicken breast\", \"chicken thigh\", \"beef mince\", \"king prawn\"]},\r\n        {category:\"dairy\", items:[\"cheddar cheese\", \"parmesan cheese\", \"single cream\",\"butter\"]},\r\n        {category:\"pantry\", items:[\"plain flour\",\"bread flour\",\"basamati rice\", \"risotto rice\", \"couscous\",\"dried prunes\",\"dried figs\", \"dried apricots\",\"linguine\",\"pasta\",\"macaroni\",\"mango chutney\"]},\r\n        {category:\"canned food\", items: [\"tinned tomato\",\"tinned tuna\", \"tinned kidney beans\",\"tinned pineapple\", \"cannellini beans\" ]},\r\n        {category:\"frozen food\", items: [\"frozen brocolli\", \"frozen peas\", \"frozen cauliflower\"]}\r\n]","import { useState } from \"react\";\r\n//import { toppings } from \"./toppings\";\r\nimport { menu } from \"./menuItems\";\r\nimport { categories } from \"./categories\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n    const [checkedState, setCheckedState] = useState(\r\n        new Array(menu.length).fill(false)\r\n    );\r\n\r\n    const [ingredients, setIngredients] = useState(new Object());\r\n\r\n    const [countSelected, setCountSelected] = useState(0);\r\n\r\n    const handleOnChange = (position) => {\r\n        const updatedCheckedState = checkedState.map((item, index) =>\r\n            index === position ? !item : item\r\n        );\r\n\r\n        setCheckedState(updatedCheckedState);\r\n        setCountSelected(updatedCheckedState[position] ? countSelected + 1 : countSelected - 1);\r\n\r\n        const newIngredients = new Object(ingredients);\r\n        const selectedMenu = menu[position];\r\n\r\n        //for each ingredient in the  menu\r\n        selectedMenu.menuIngredients.forEach((menuItem, value) => {\r\n            //console.log(menuItem.item + \" - \" + menuItem.quantity);\r\n            if (newIngredients[menuItem.item] >= 0) {\r\n                //console.log(\"key exists\");\r\n                const preVal = newIngredients[menuItem.item];\r\n                console.log(\"preVal = \" + preVal);\r\n                console.log(\"checked = \" + !checkedState[position]);\r\n                const newVal = (!checkedState[position] ? preVal + menuItem.quantity : preVal - menuItem.quantity);\r\n\r\n                //console.log(\"new val = \" + newVal);\r\n\r\n                if (newVal === 0) {\r\n                    delete newIngredients[menuItem.item];\r\n                } else {\r\n                    newIngredients[menuItem.item] = newVal;\r\n                }\r\n            } else {\r\n                //console.log(\"key does not exist\");\r\n                newIngredients[menuItem.item] = menuItem.quantity;\r\n                //console.log(\"post key exists = \" + newIngredients[menuItem.item]);\r\n            }\r\n        })\r\n\r\n        console.log(newIngredients);\r\n\r\n        //Object.entries(newIngredients).map((key,val) =>console.log(key[0]));\r\n\r\n        setIngredients(newIngredients);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h2>Select Menu Items</h2>\r\n            <h3> number of items selected {countSelected}</h3>\r\n            <div className=\"scrollable-div\">\r\n                <ul className=\"toppings-list\">\r\n                    {\r\n                        menu.map(({ menuItem, isVegetarian }, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <div className=\"toppings-list-item\">\r\n                                        <div className=\"left-section\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                id={`custom-checkbox-${index}`}\r\n                                                name={menuItem}\r\n                                                value={menuItem}\r\n                                                checked={checkedState[index]}\r\n                                                onChange={() => handleOnChange(index)}\r\n                                            />\r\n                                            <label htmlFor={`custom-checkbox-${index}`}>{menuItem}</label>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"right-section\">{\" \"}{isVegetarian ? \"(V)\" : \"\"}</div>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <h2>Ingredients List</h2>\r\n            <div className=\"scrollable-div-ingredients\">\r\n                {\r\n                    categories.map(({ category, items }) => {\r\n                        return (\r\n\r\n                            <div>\r\n                                <h3>{category}</h3>\r\n                                <ul className=\"toppings-list\">\r\n\r\n                                    {\r\n                                        Object.entries(ingredients).filter(key => items.indexOf(key[0]) >= 0).map((key, index2) => {\r\n                                            return (\r\n                                                <div className=\"toppings-list-item\">\r\n                                                    <div className=\"left-section\">\r\n                                                        <li key={index2}>\r\n                                                            {key[0]}  {key[1]}\r\n                                                        </li>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        }\r\n                                        )\r\n\r\n                                    }\r\n\r\n                                </ul>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}